//
// Generated file, do not edit! Created by nedtool 4.6 from messages/NewControlPacket.msg.
//

#ifndef _NEWCONTROLPACKET_M_H_
#define _NEWCONTROLPACKET_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>messages/NewControlPacket.msg:19</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet NewControlPacket
 * {
 *     double data[];
 *     int flow_set[];
 * }
 * </pre>
 */
class NewControlPacket : public ::cPacket
{
  protected:
    double *data_var; // array ptr
    unsigned int data_arraysize;
    int *flow_set_var; // array ptr
    unsigned int flow_set_arraysize;

  private:
    void copy(const NewControlPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const NewControlPacket&);

  public:
    NewControlPacket(const char *name=NULL, int kind=0);
    NewControlPacket(const NewControlPacket& other);
    virtual ~NewControlPacket();
    NewControlPacket& operator=(const NewControlPacket& other);
    virtual NewControlPacket *dup() const {return new NewControlPacket(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual void setDataArraySize(unsigned int size);
    virtual unsigned int getDataArraySize() const;
    virtual double getData(unsigned int k) const;
    virtual void setData(unsigned int k, double data);
    virtual void setFlow_setArraySize(unsigned int size);
    virtual unsigned int getFlow_setArraySize() const;
    virtual int getFlow_set(unsigned int k) const;
    virtual void setFlow_set(unsigned int k, int flow_set);
};

inline void doPacking(cCommBuffer *b, NewControlPacket& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, NewControlPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef _NEWCONTROLPACKET_M_H_

