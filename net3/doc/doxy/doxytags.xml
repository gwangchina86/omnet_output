<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>Application.cc</name>
    <path>/Users/byr/Documents/zm/omnet_output/net3/</path>
    <filename>_application_8cc</filename>
    <includes id="_application_8h" name="Application.h" local="yes" imported="no">Application.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_application_8cc.html</anchorfile>
      <anchor>a3ec424bf69ed2b66ce41d7c30bb0cb5f</anchor>
      <arglist>(Application)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Application.h</name>
    <path>/Users/byr/Documents/zm/omnet_output/net3/</path>
    <filename>_application_8h</filename>
    <includes id="_data_packet__m_8h" name="DataPacket_m.h" local="yes" imported="no">DataPacket_m.h</includes>
    <includes id="_timer_next_packet__m_8h" name="TimerNextPacket_m.h" local="yes" imported="no">TimerNextPacket_m.h</includes>
    <includes id="_control_packet__m_8h" name="ControlPacket_m.h" local="yes" imported="no">ControlPacket_m.h</includes>
    <includes id="_statistic_8h" name="Statistic.h" local="yes" imported="no">Statistic.h</includes>
    <class kind="class">Application</class>
  </compound>
  <compound kind="file">
    <name>Balancer.cc</name>
    <path>/Users/byr/Documents/zm/omnet_output/net3/</path>
    <filename>_balancer_8cc</filename>
    <includes id="_balancer_8h" name="Balancer.h" local="yes" imported="no">Balancer.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_balancer_8cc.html</anchorfile>
      <anchor>abf1224578d2c4d0c1a9c44e97bd27df6</anchor>
      <arglist>(Balancer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Balancer.h</name>
    <path>/Users/byr/Documents/zm/omnet_output/net3/</path>
    <filename>_balancer_8h</filename>
    <includes id="_data_packet__m_8h" name="DataPacket_m.h" local="yes" imported="no">DataPacket_m.h</includes>
    <includes id="_statistic_8h" name="Statistic.h" local="yes" imported="no">Statistic.h</includes>
    <class kind="class">Balancer</class>
  </compound>
  <compound kind="file">
    <name>ControlPacket_m.h</name>
    <path>/Users/byr/Documents/zm/omnet_output/net3/messages/</path>
    <filename>_control_packet__m_8h</filename>
    <class kind="class">ControlPacket</class>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>_control_packet__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>_control_packet__m_8h.html</anchorfile>
      <anchor>ab52391f67bec60025b21e89352f86570</anchor>
      <arglist>(cCommBuffer *b, ControlPacket &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>_control_packet__m_8h.html</anchorfile>
      <anchor>a7a3f69ffc51ff09208a2739d6d679ed8</anchor>
      <arglist>(cCommBuffer *b, ControlPacket &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DataPacket_m.h</name>
    <path>/Users/byr/Documents/zm/omnet_output/net3/messages/</path>
    <filename>_data_packet__m_8h</filename>
    <class kind="class">DataPacket</class>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>_data_packet__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>_data_packet__m_8h.html</anchorfile>
      <anchor>ae069ceb9fe096f4967e797c0827e1a2f</anchor>
      <arglist>(cCommBuffer *b, DataPacket &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>_data_packet__m_8h.html</anchorfile>
      <anchor>a6d811e20b27e98b4a9a6f0cef4fefb9c</anchor>
      <arglist>(cCommBuffer *b, DataPacket &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NodeQueue.cc</name>
    <path>/Users/byr/Documents/zm/omnet_output/net3/</path>
    <filename>_node_queue_8cc</filename>
    <includes id="_node_queue_8h" name="NodeQueue.h" local="yes" imported="no">NodeQueue.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_node_queue_8cc.html</anchorfile>
      <anchor>ad4f3b619083383f45ce811985db308d6</anchor>
      <arglist>(NodeQueue)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NodeQueue.h</name>
    <path>/Users/byr/Documents/zm/omnet_output/net3/</path>
    <filename>_node_queue_8h</filename>
    <includes id="_data_packet__m_8h" name="DataPacket_m.h" local="yes" imported="no">DataPacket_m.h</includes>
    <includes id="_statistic_8h" name="Statistic.h" local="yes" imported="no">Statistic.h</includes>
    <class kind="class">NodeQueue</class>
  </compound>
  <compound kind="file">
    <name>Routing.cc</name>
    <path>/Users/byr/Documents/zm/omnet_output/net3/</path>
    <filename>_routing_8cc</filename>
    <includes id="_routing_8h" name="Routing.h" local="yes" imported="no">Routing.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_routing_8cc.html</anchorfile>
      <anchor>a6eeb74869f41c893ae49b8b4fd8c6290</anchor>
      <arglist>(Routing)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Routing.h</name>
    <path>/Users/byr/Documents/zm/omnet_output/net3/</path>
    <filename>_routing_8h</filename>
    <includes id="_data_packet__m_8h" name="DataPacket_m.h" local="yes" imported="no">DataPacket_m.h</includes>
    <includes id="_statistic_8h" name="Statistic.h" local="yes" imported="no">Statistic.h</includes>
    <class kind="class">Routing</class>
  </compound>
  <compound kind="file">
    <name>Statistic.cc</name>
    <path>/Users/byr/Documents/zm/omnet_output/net3/</path>
    <filename>_statistic_8cc</filename>
    <includes id="_statistic_8h" name="Statistic.h" local="no" imported="no">Statistic.h</includes>
  </compound>
  <compound kind="file">
    <name>Statistic.h</name>
    <path>/Users/byr/Documents/zm/omnet_output/net3/</path>
    <filename>_statistic_8h</filename>
    <class kind="class">Statistic</class>
  </compound>
  <compound kind="file">
    <name>TimerNextPacket_m.h</name>
    <path>/Users/byr/Documents/zm/omnet_output/net3/messages/</path>
    <filename>_timer_next_packet__m_8h</filename>
    <class kind="class">TimerNextPacket</class>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>_timer_next_packet__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doPacking</name>
      <anchorfile>_timer_next_packet__m_8h.html</anchorfile>
      <anchor>ac4feb5fe6a7e82c5ad3a1ee030c8b142</anchor>
      <arglist>(cCommBuffer *b, TimerNextPacket &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doUnpacking</name>
      <anchorfile>_timer_next_packet__m_8h.html</anchorfile>
      <anchor>adb58945a276a53f3f4ea69089f537ee3</anchor>
      <arglist>(cCommBuffer *b, TimerNextPacket &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TrafficController.cc</name>
    <path>/Users/byr/Documents/zm/omnet_output/net3/</path>
    <filename>_traffic_controller_8cc</filename>
    <includes id="_traffic_controller_8h" name="TrafficController.h" local="yes" imported="no">TrafficController.h</includes>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>_traffic_controller_8cc.html</anchorfile>
      <anchor>ad81de9213d1675e1a3f5fb8694425835</anchor>
      <arglist>(TrafficController)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TrafficController.h</name>
    <path>/Users/byr/Documents/zm/omnet_output/net3/</path>
    <filename>_traffic_controller_8h</filename>
    <includes id="_control_packet__m_8h" name="ControlPacket_m.h" local="yes" imported="no">ControlPacket_m.h</includes>
    <class kind="class">TrafficController</class>
  </compound>
  <compound kind="class">
    <name>Application</name>
    <filename>class_application.html</filename>
    <base>cSimpleModule</base>
    <member kind="function">
      <type></type>
      <name>Application</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>afa8cc05ce6b6092be5ecdfdae44e05f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Application</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a748bca84fefb9c12661cfaa2f623748d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>af431bce25717b04a78d4d0940ed6a92c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a9dc9d3361ed4aed09ac6ef1e653ab9aa</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>nextPacket</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a5fa8ccdfad6d1785b1c6cb1e03982634</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>nextDest</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>add61f14d23d34a42c634d74f115846e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>extractId</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a1f06d323b64edbf4913d18dea4576a87</anchor>
      <arglist>(string name, int pos)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initSignals</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a59beaa7769cb4d68624b3e230b1e4395</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TimerNextPacket *</type>
      <name>interArrival</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a765d3b38b9a592fd1b49bedda8ddca95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>id</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>afd2fb44e1a15df52f477153605f571cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numPackets</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a0737e7efdd58214f4f508773df7b696b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>genT</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a8f438a5e48b33d11a847a0806751eaf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>lambdaFactor</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a9151a6ffdd4b0ba07dedc5f5b5a34944</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>numRx</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>ad2245ca536483096e2d81a67b551165d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>lambda</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>a328e8065e26b45968e1484f4f650b63f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>MAXSIM</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>af64c4eb9152449dde00738b36d2c3b77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>dest</name>
      <anchorfile>class_application.html</anchorfile>
      <anchor>ae43b75c56d6593bd290e3147b4df0abd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Balancer</name>
    <filename>class_balancer.html</filename>
    <base>cSimpleModule</base>
    <member kind="function">
      <type></type>
      <name>Balancer</name>
      <anchorfile>class_balancer.html</anchorfile>
      <anchor>a62ea099474d4e83d02a26666c55d3ebf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Balancer</name>
      <anchorfile>class_balancer.html</anchorfile>
      <anchor>a03029db5eb5a398ba302b1a58f058d6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_balancer.html</anchorfile>
      <anchor>a53db8b58e6d51aca3cbdb55079745841</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_balancer.html</anchorfile>
      <anchor>ab7e5703205589e4bd210ebf6346056b1</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getBalancingInfo</name>
      <anchorfile>class_balancer.html</anchorfile>
      <anchor>aaeef9a43c29742e9ce0bd5278f7b9a40</anchor>
      <arglist>(int id, double rData[])</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateBalancingInfo</name>
      <anchorfile>class_balancer.html</anchorfile>
      <anchor>af48e1fa423e17dcf033208d8399e0642</anchor>
      <arglist>(int id, double rData[])</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numPorts</name>
      <anchorfile>class_balancer.html</anchorfile>
      <anchor>a90f569ee2e95ef49a3560608e596d8cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>id</name>
      <anchorfile>class_balancer.html</anchorfile>
      <anchor>a26e5fa763bc4c8dcae31e21a61c2d690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numTx</name>
      <anchorfile>class_balancer.html</anchorfile>
      <anchor>ac4839adfcf35dd7973b78263bcf8f598</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numNodes</name>
      <anchorfile>class_balancer.html</anchorfile>
      <anchor>a6da43228cdfb3d057b0e1b5d6f7227f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>balance</name>
      <anchorfile>class_balancer.html</anchorfile>
      <anchor>a69ed0175fcab727411063fd1716beb10</anchor>
      <arglist>[100]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>folderName</name>
      <anchorfile>class_balancer.html</anchorfile>
      <anchor>a4c23e3381c06ede89b6db6f7b6684321</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ControlPacket</name>
    <filename>class_control_packet.html</filename>
    <base>cPacket</base>
    <member kind="function">
      <type></type>
      <name>ControlPacket</name>
      <anchorfile>class_control_packet.html</anchorfile>
      <anchor>ad9e00e32dec3aa2ca83031a71f54a080</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ControlPacket</name>
      <anchorfile>class_control_packet.html</anchorfile>
      <anchor>a560fabe4a9e01f26e621e0b55cfa7941</anchor>
      <arglist>(const ControlPacket &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ControlPacket</name>
      <anchorfile>class_control_packet.html</anchorfile>
      <anchor>aa1d05c78d884c180df0a65de2520aa1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ControlPacket &amp;</type>
      <name>operator=</name>
      <anchorfile>class_control_packet.html</anchorfile>
      <anchor>adc7c051c130227437df2c37fe19d7dc2</anchor>
      <arglist>(const ControlPacket &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ControlPacket *</type>
      <name>dup</name>
      <anchorfile>class_control_packet.html</anchorfile>
      <anchor>a44cf65937b5f07015291e3b8315490f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_control_packet.html</anchorfile>
      <anchor>a4743bdf9f5d75e997ef077cbbea6efb8</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_control_packet.html</anchorfile>
      <anchor>a951171605d84fe2c0726ac76ccd40f0f</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getData</name>
      <anchorfile>class_control_packet.html</anchorfile>
      <anchor>a079ca2a0609d3e2bf9b11666df28d256</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setData</name>
      <anchorfile>class_control_packet.html</anchorfile>
      <anchor>a2694c0e4be3556e9a5b86ec7e560ef20</anchor>
      <arglist>(double data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_control_packet.html</anchorfile>
      <anchor>a8148883f0bd84951ef75af01c7022043</anchor>
      <arglist>(const ControlPacket &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>data_var</name>
      <anchorfile>class_control_packet.html</anchorfile>
      <anchor>afb99236040d1aa04694099f02fa296e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_control_packet.html</anchorfile>
      <anchor>a817f1aa1759221a172e471cb8eb85b96</anchor>
      <arglist>(const ControlPacket &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DataPacket</name>
    <filename>class_data_packet.html</filename>
    <base>cPacket</base>
    <member kind="function">
      <type></type>
      <name>DataPacket</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a0d92c507ae5154ca4145d4f488aac96a</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DataPacket</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>af81e5d69b21769df82eaaa9388eef985</anchor>
      <arglist>(const DataPacket &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DataPacket</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a6865aaea072c8af4caf7e4cb6baa0155</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DataPacket &amp;</type>
      <name>operator=</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a5f4b75af7d7c8f1f79d663347ee30ca9</anchor>
      <arglist>(const DataPacket &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DataPacket *</type>
      <name>dup</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>ac4e114d58394fc47cb0f0b7a2494c048</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a911441464244c9581a99ec8f74bd065a</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a5c16f85dc91002c4f4c080b28c2856fe</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getSrcNode</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a720c8b2c007ae7f01520ce1e1b47475e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSrcNode</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>abf76892181047716e3c431855e99e8f0</anchor>
      <arglist>(int srcNode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDstNode</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a7136dc650e419fafff969c8bd772a757</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDstNode</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a1b949ca48eff2a00982569a9ffde5a47</anchor>
      <arglist>(int dstNode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTtl</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a7ab4573b00df702cfc67ae7b462e308a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTtl</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a374e9dc7fdb362df67cd145473a156df</anchor>
      <arglist>(int ttl)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getLastRouter</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a8d015950ef2b296205b3c2f137644efa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLastRouter</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a4fd16ad96471ea06e6067df303d8437c</anchor>
      <arglist>(int lastRouter)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getL2</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>ab9b6236b580ea939795b5a8cd77c70af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setL2</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>aed7d318eca7f541095ffb0a9dcd47fb9</anchor>
      <arglist>(int l2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getL3</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a310c6b94231fe008c8ffd07a3dbe04fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setL3</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a64f0a50b797fda1d829aed72692fdd48</anchor>
      <arglist>(int l3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getL4</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>ac94af01e6002b63cb88a66968e77f260</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setL4</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>ac87d877b63d7c145e3865254b02335e1</anchor>
      <arglist>(int l4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getLastQueue</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>aa6f62384529714a5fc75d0b08d57071e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLastQueue</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>ad0aff4739f3fb877d39f4d59b07a68a0</anchor>
      <arglist>(int lastQueue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getQ2</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a11c8eacc5cee909b3f09e56d97831b60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setQ2</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a19ddf2c09c963a194e674163054b4fdd</anchor>
      <arglist>(int q2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getQ3</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a984dd42c69b29502eda55d469c71e445</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setQ3</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a416d0cad432583cc4a2b8c7677b93c14</anchor>
      <arglist>(int q3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getQ4</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>ac23b3aa2b293dd06c2bedb84f2516b70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setQ4</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a7bd1e0a45295d5c54974b5782bb34449</anchor>
      <arglist>(int q4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getQ5</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>aafde53009c505eada69fb28f59196d13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setQ5</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a9ffb81bb9bba77bb34df82ec6bf7a03a</anchor>
      <arglist>(int q5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getLastTS</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a8cb1ab255b0d200425d9f62236c862d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLastTS</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a593916faf513766d9a8fa20b8df363d2</anchor>
      <arglist>(double lastTS)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getT2</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a4d727ee4d047b015a5958a02661559a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setT2</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a9ad8978e8668cfe1cb8e94bdb7b3e062</anchor>
      <arglist>(double t2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getT3</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a3f3a4bdbaca00712eb49bb1114cb20a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setT3</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a80260a329056bd62566985ae48a1ccc4</anchor>
      <arglist>(double t3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getT4</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a851511bff21ac786f3e8989667b3d6c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setT4</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a760962eed38a6dfd73fe63d9678bee4d</anchor>
      <arglist>(double t4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getT5</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a5ed8c99cba5f9fed074278e1fabf09d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setT5</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a3a168095cd02dfdaed00617451fd05a0</anchor>
      <arglist>(double t5)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getRouting</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a8c882d43cdbd136c29715e9e961a0a22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRouting</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a4e0a4922154bef7d05b810ce50354493</anchor>
      <arglist>(int routing)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a3d1ce9b26a939d03c5032c624d8f1bd5</anchor>
      <arglist>(const DataPacket &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>srcNode_var</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a0ce489298571dad5be388f24375946f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>dstNode_var</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>aabb71db9e874554998087856bb2a6194</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>ttl_var</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a2fdfad2b9894ce5565fd1c2470b86ed9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>lastRouter_var</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>ab2646d66b100d1987f7a808ca00d9e94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>l2_var</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a457d7dc46dd564e5c3b70c4dc6981150</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>l3_var</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a859f3edc29dd2cb10453769e04cb7e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>l4_var</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a24a796b7045f340e73694451af8c7fd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>lastQueue_var</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>ac4ec3bcbc7e5ea106752b48707e73030</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>q2_var</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a527172d78b271ba50d0a098d75ebb1c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>q3_var</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a8326cb8d348e3965e9aa1208e6d75ff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>q4_var</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a0bd9102da302298dc3ef9f0facb5bb11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>q5_var</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>aec64b3424098ab41f2661ec913b0ca41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>lastTS_var</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a4129f429565815f44044b8cc1ccbcc7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>t2_var</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>abeb1aeb23467d2ffd9ceea4aa95b9e1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>t3_var</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a15df80720129afe32e99fddfe1fada1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>t4_var</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>af5caffc78012f7ebc3fc10d859eb1214</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>t5_var</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>ac6e82edd8a2fbe0dabaab0518e1783f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>routing_var</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>a8931f5ddc6549f76d7e34f545f5c80ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_data_packet.html</anchorfile>
      <anchor>aac4d915bf975d34a79c9f09c1a19bbec</anchor>
      <arglist>(const DataPacket &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NodeQueue</name>
    <filename>class_node_queue.html</filename>
    <base>cSimpleModule</base>
    <member kind="function">
      <type></type>
      <name>NodeQueue</name>
      <anchorfile>class_node_queue.html</anchorfile>
      <anchor>a6aa4154d104a6a3df574bdfb6c5a54ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeQueue</name>
      <anchorfile>class_node_queue.html</anchorfile>
      <anchor>a953604b0b368b3d10f051690b4130faf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_node_queue.html</anchorfile>
      <anchor>abae921a2f70ced84f37a99650e98ddbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_node_queue.html</anchorfile>
      <anchor>a6a581a490740db7117a512e5841bd562</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>queue&lt; cMessage * &gt;</type>
      <name>portQueue</name>
      <anchorfile>class_node_queue.html</anchorfile>
      <anchor>a1fb85660294cb2ad8f657fd86de5ee2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>cMessage *</type>
      <name>endTxMsg</name>
      <anchorfile>class_node_queue.html</anchorfile>
      <anchor>ace5a8ff41dc908c5ac9407efb1c23a36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>deleted</name>
      <anchorfile>class_node_queue.html</anchorfile>
      <anchor>ac8afa6929e41d1340bffdc070ac4fda3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Routing</name>
    <filename>class_routing.html</filename>
    <base>cSimpleModule</base>
    <member kind="function">
      <type></type>
      <name>Routing</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>a441089a77e1d396dd82bf23f2523949f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Routing</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>a53fba92a5bae29fa140d93d8fb7367f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>a4a805de60e81a7ab10a1a41f7db15abf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>a09c44e71b4e8ad9862262b2756603f52</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getRoutingInfo</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>a0ab80d941b555b4a4868eafdbd04c2fe</anchor>
      <arglist>(int id, int rData[])</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numPorts</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>a514564dc73b3a5dbfffabf4cc3d24c09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>id</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>ac7fc4847ff19004032db1a7bf0d1ea26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numTx</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>a04911fd87dd4746d5577e90e9f6788f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numNodes</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>addb5579108c36bf7afe2f02df4a321d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>outPort</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>afe28a896975030519fcb342507eeb027</anchor>
      <arglist>[100]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>folderName</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>a461fd4ec74fbd926ac8f4f0f3df5ec37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>flow_num</name>
      <anchorfile>class_routing.html</anchorfile>
      <anchor>afadb21269ad2725bf5fee19886cf0ac3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Statistic</name>
    <filename>class_statistic.html</filename>
    <member kind="function">
      <type>void</type>
      <name>infoTS</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a9a99728b0a5cac8543c329a500640dad</anchor>
      <arglist>(simtime_t time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDelay</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>acb14e5f7e7c59a52863eb348443912ee</anchor>
      <arglist>(simtime_t time, int i, int j, double d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTraffic</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>aa17209086c1e8310fe56dc5759b93789</anchor>
      <arglist>(simtime_t time, int i, int j, double t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRouting</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a96c087cdce55d73602954af63028f4f2</anchor>
      <arglist>(int n, int r, double p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLambda</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>ab5e7d801d2e2fd3345fbf86a2d3c5abb</anchor>
      <arglist>(double l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGeneration</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a558ac31b012a5d3b79f4b5a935509c0b</anchor>
      <arglist>(int genType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLost</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a42f96d5b7c649fa1cba66d8b407c5fda</anchor>
      <arglist>(simtime_t time, int n, int p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLost</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a6fa5f564b8a8f9451ac247f8d3bcbb48</anchor>
      <arglist>(simtime_t time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumTx</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a9a28fe0d0537ce746ec9fac2a3358cc9</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumFlow</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a9967de9ab508bcfbfc995b42fe6c5bef</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumNodes</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>aee0491c14ffad2ddd7804e8db7b1ccee</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRoutingParaam</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a1c025f8ebe413c53c69f2fd9d0c719bf</anchor>
      <arglist>(double r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxSim</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a4b033a5b9b527285648261d472010b7d</anchor>
      <arglist>(double r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFolder</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a7e9957e0aa1ec932b99897eb420229ff</anchor>
      <arglist>(string folder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printStats</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a4cd3d5e31f9bc58837afaf8d7abdd0ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Statistic *</type>
      <name>instance</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a3b55e3843e16f77c4644ff96452203f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Statistic</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a00637756290a7a4c8444e7076c135466</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~Statistic</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a273cc8bd352a4fa0c18006971c008424</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initLinkID</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a7cd2adc2465cec6c3adde003d7be63c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>simtime_t</type>
      <name>INI</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>af5af4370fb35d46aee42edb41e626715</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>simtime_t</type>
      <name>END</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>aec518ef84e52a593472b3b28c5a2dbc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>SIMTIME</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>acdc12726cd9ae08250e8ac99f123a6e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>collect</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>af896895bbe5db74528c0f2e401401170</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numTx</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a1b11b7a608f9a146b787e45338cfcb89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numNodes</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a6a4b5f71b5c2421f1680548d05a08036</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>genT</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a50a5963a16532798bb6cb4e5d09599f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>lambdaMax</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a482a1675de8c55d790e59dfb2eef7a44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>routingP</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>aa294fe6407ed47695b36a1260762cb4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>flow_num</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a37ae807ef3eba877ee4728b50183de7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>folderName</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>aadbe95b74ba3cd1b830378b71eb97662</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>drops</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>ac7d1a6c28227d34de5ee955004b4c364</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; vector&lt; vector&lt; double &gt; &gt; &gt;</type>
      <name>Traffic</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a99331e524998e3dff7960b35fa4d55d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; vector&lt; double &gt; &gt;</type>
      <name>Routing</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a53f6ee645e6afbeb334a6e2a84e7296e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; vector&lt; vector&lt; double &gt; &gt; &gt;</type>
      <name>Delay</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a96fc98c3b49fe711dece46e3bc356769</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; vector&lt; double &gt; &gt;</type>
      <name>DropsV</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>aecc61f14182b23bfbde60c670947c0ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; vector&lt; vector&lt; double &gt; &gt; &gt;</type>
      <name>Jitter</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a797ad7ed93c5395364fb6489605a2236</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; vector&lt; int &gt; &gt;</type>
      <name>Flow_info</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a6e36a5d79f55d84812cc64f01c9cbda5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static Statistic *</type>
      <name>inst</name>
      <anchorfile>class_statistic.html</anchorfile>
      <anchor>a09b642844b9260a2b3131b0b9b7ed729</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TimerNextPacket</name>
    <filename>class_timer_next_packet.html</filename>
    <base>cMessage</base>
    <member kind="function">
      <type></type>
      <name>TimerNextPacket</name>
      <anchorfile>class_timer_next_packet.html</anchorfile>
      <anchor>aa4a7057426f1589873bc5d59e723f47d</anchor>
      <arglist>(const char *name=NULL, int kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimerNextPacket</name>
      <anchorfile>class_timer_next_packet.html</anchorfile>
      <anchor>a7a0b0394c97934806e397eaffba08f01</anchor>
      <arglist>(const TimerNextPacket &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TimerNextPacket</name>
      <anchorfile>class_timer_next_packet.html</anchorfile>
      <anchor>a3ca7198c4b02b3dec5e73c2b22848b2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimerNextPacket &amp;</type>
      <name>operator=</name>
      <anchorfile>class_timer_next_packet.html</anchorfile>
      <anchor>a5ac94e58bf6a3c69fbec89783b19ac09</anchor>
      <arglist>(const TimerNextPacket &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TimerNextPacket *</type>
      <name>dup</name>
      <anchorfile>class_timer_next_packet.html</anchorfile>
      <anchor>aabe243bc61cc681bd23d36053076c983</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>class_timer_next_packet.html</anchorfile>
      <anchor>ad60b124d058745b8bbdf6f56a2f8253b</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>class_timer_next_packet.html</anchorfile>
      <anchor>ad188cf90110afc0f7a3f3bb3f54aa9ae</anchor>
      <arglist>(cCommBuffer *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getTarget</name>
      <anchorfile>class_timer_next_packet.html</anchorfile>
      <anchor>a072eced209668d10129dbf87105f2d12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTarget</name>
      <anchorfile>class_timer_next_packet.html</anchorfile>
      <anchor>a57500360f737948b084bed87f9931c58</anchor>
      <arglist>(int target)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getLambda</name>
      <anchorfile>class_timer_next_packet.html</anchorfile>
      <anchor>a5bdb71b2c65d1b88ba43daa0d4bb79ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLambda</name>
      <anchorfile>class_timer_next_packet.html</anchorfile>
      <anchor>a9f25e44279aae0d1660e58bfba87b430</anchor>
      <arglist>(double lambda)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>class_timer_next_packet.html</anchorfile>
      <anchor>ac62c9c7507e1e4e3296f0c1c65ef38a9</anchor>
      <arglist>(const TimerNextPacket &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>target_var</name>
      <anchorfile>class_timer_next_packet.html</anchorfile>
      <anchor>a8aca5c895a77a3fa3d84e7bc786595c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>lambda_var</name>
      <anchorfile>class_timer_next_packet.html</anchorfile>
      <anchor>a3310e3552d680fb4a3e9ff04c8f2b95e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>class_timer_next_packet.html</anchorfile>
      <anchor>a3e16d00b0421ec3822e8b0f8b5887841</anchor>
      <arglist>(const TimerNextPacket &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TrafficController</name>
    <filename>class_traffic_controller.html</filename>
    <base>cSimpleModule</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>class_traffic_controller.html</anchorfile>
      <anchor>a8cf3cd6d7ed824afdc5c1c8523b9ef8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>class_traffic_controller.html</anchorfile>
      <anchor>a37416a3bdc4d3e2a9e7311281050a1a4</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getTrafficInfo</name>
      <anchorfile>class_traffic_controller.html</anchorfile>
      <anchor>ae6632a27e01043d30c9a59f3db69a4b0</anchor>
      <arglist>(int id, double rData[])</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>nodeRatio</name>
      <anchorfile>class_traffic_controller.html</anchorfile>
      <anchor>ad5f1c8c488d81a847063abc95b1016b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numNodes</name>
      <anchorfile>class_traffic_controller.html</anchorfile>
      <anchor>a2557a9f541b64306e3991de3c3dd15f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>id</name>
      <anchorfile>class_traffic_controller.html</anchorfile>
      <anchor>a1ceaffd3a80faf75ac43acaa89a1b4ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>flowRatio</name>
      <anchorfile>class_traffic_controller.html</anchorfile>
      <anchor>aded81677a1df318588c388fd92b88a6c</anchor>
      <arglist>[100]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>folderName</name>
      <anchorfile>class_traffic_controller.html</anchorfile>
      <anchor>a505229424a62914d5031941497a610ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>flow_num</name>
      <anchorfile>class_traffic_controller.html</anchorfile>
      <anchor>a1ac1a689befe06b58e75aaaa838bbe87</anchor>
      <arglist></arglist>
    </member>
  </compound>
</tagfile>
